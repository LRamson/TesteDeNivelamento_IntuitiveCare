{
	"info": {
		"_postman_id": "093c8ca1-cffa-45e2-8d12-1a77ad3f99c7",
		"name": "Operadoras-LucasRamson",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28245679"
	},
	"item": [
		{
			"name": "Requisição Por Nome",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response has results\", () => {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.results).to.be.an('array');\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:5000/api/operators/search?search_term=Bradesco",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"api",
						"operators",
						"search"
					],
					"query": [
						{
							"key": "search_term",
							"value": "Bradesco"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Requisição Com Filtros",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response has results\", () => {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.results).to.be.an('array');\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:5000/api/operators/search?uf=DF&cidade=Brasília&modalidade=Administradora+de+Benefícios",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"api",
						"operators",
						"search"
					],
					"query": [
						{
							"key": "uf",
							"value": "DF"
						},
						{
							"key": "cidade",
							"value": "Brasília"
						},
						{
							"key": "modalidade",
							"value": "Administradora+de+Benefícios"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Requisição Por Nome Com Filtros",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response has results\", () => {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.results).to.be.an('array');\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:5000/api/operators/search?search_term=Allcare&uf=DF&cidade=Brasília&modalidade=Administradora+de+Benefícios",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"api",
						"operators",
						"search"
					],
					"query": [
						{
							"key": "search_term",
							"value": "Allcare"
						},
						{
							"key": "uf",
							"value": "DF"
						},
						{
							"key": "cidade",
							"value": "Brasília"
						},
						{
							"key": "modalidade",
							"value": "Administradora+de+Benefícios"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Requisição Sem Resultado",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response has results\", () => {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.results).to.be.an('array');\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:5000/api/operators/search?search_term=sadasdadsdaddas",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"api",
						"operators",
						"search"
					],
					"query": [
						{
							"key": "search_term",
							"value": "sadasdadsdaddas"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Busca de Opções de Filtros",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response has results\", () => {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.values).to.be.an('array');\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:5000/api/operators/filters/uf",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"api",
						"operators",
						"filters",
						"uf"
					]
				}
			},
			"response": []
		},
		{
			"name": "Busca de Opções de Filtros Não Permitidos",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns 400 for invalid parameter types\", function() {\r",
							"    pm.response.to.have.status(400);\r",
							"    pm.response.to.have.jsonBody(\"error\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:5000/api/operators/filters/cnpj",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"api",
						"operators",
						"filters",
						"cnpj"
					]
				}
			},
			"response": []
		}
	]
}